{
  "openapi": "3.0.1",
  "info": {
    "title": "Ride Share App",
    "description": "Ride sharing app server to facilitate booking of cabs.",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "syedfayaz28@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "cab",
      "description": "Get nearby cab based on current coordinates"
    },
    {
      "name": "book",
      "description": "Access to booking orders"
    },
    {
      "name": "user",
      "description": "Operations about user"
    }
  ],
  "paths": {
    "/cab/nearby": {
      "x-swagger-router-controller": "cab",
      "get": {
        "tags": [
          "cab"
        ],
        "summary": "Finds cabs nearby",
        "description": "Get nearest cabs based on the coordinates",
        "operationId": "getNearbyCabs",
        "parameters": [
          {
            "name": "latitude",
            "in": "query",
            "description": "Latitude of current location",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "longitude",
            "in": "query",
            "description": "Longitude of current location",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "maxDistance",
            "in": "query",
            "description": "Maximum distance in meters",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "number",
              "format": "int"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of records to send for each page",
            "schema": {
              "type": "number",
              "format": "int"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cab"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/book/history": {
      "x-swagger-router-controller": "book",
      "get": {
        "tags": [
          "book"
        ],
        "summary": "Returns past bookings",
        "description": "This endpoint returns data about a user's past cab bookings. The response will include pickup locations and dropoff locations.",
        "operationId": "getRideHistory",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "number",
              "format": "int"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of records to send for each page",
            "schema": {
              "type": "number",
              "format": "int"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/book/order": {
      "x-swagger-router-controller": "book",
      "post": {
        "tags": [
          "book"
        ],
        "summary": "Book a cab",
        "description": "Endpoint places booking of a cab based on pickup and dropoff",
        "operationId": "bookCab",
        "requestBody": {
          "description": "Contains pickup and dropoff location",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Booking"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "cab booking created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Booking"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {}
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/signup": {
      "x-swagger-router-controller": "user",
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "Create new user by passing email nad password.",
        "operationId": "createUser",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {}
          }
        }
      }
    },
    "/auth/login": {
      "x-swagger-router-controller": "user",
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "operationId": "loginUser",
        "requestBody": {
          "description": "contains username and password",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Booking": {
        "type": "object",
        "properties": {
          "start": {
            "$ref": "#/components/schemas/Location"
          },
          "end": {
            "$ref": "#/components/schemas/Location"
          }
        }
      },
      "Location": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "Cab": {
        "type": "object",
        "properties": {
          "cabNumber": {
            "type": "string"
          },
          "currentLocation": {
            "$ref": "#/components/schemas/Location"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}